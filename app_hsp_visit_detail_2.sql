USE EpicCare;

--
--
DELETE FROM OMOP.visit_detail
WHERE ETL_Module = 'VISIT_DETAIL--CLARITYHOSP--ALL';

INSERT INTO OMOP.VISIT_DETAIL (
    VISIT_DETAIL_ID
    , PERSON_ID
    , VISIT_DETAIL_CONCEPT_ID
    , VISIT_DETAIL_START_DATE
    , VISIT_DETAIL_START_DATETIME
    , VISIT_DETAIL_END_DATE
    , VISIT_DETAIL_END_DATETIME
    , VISIT_DETAIL_TYPE_CONCEPT_ID
    , PROVIDER_ID
    , CARE_SITE_ID
    , VISIT_DETAIL_SOURCE_VALUE
    , VISIT_DETAIL_SOURCE_CONCEPT_ID
    , ADMITTING_SOURCE_VALUE
    , ADMITTING_SOURCE_CONCEPT_ID
    , DISCHARGE_TO_SOURCE_VALUE
    , DISCHARGE_TO_CONCEPT_ID
    , PRECEDING_VISIT_DETAIL_ID
    , VISIT_DETAIL_PARENT_ID
    , VISIT_OCCURRENCE_ID
    , ETL_MODULE
    , VISIT_SOURCE_VALUE
    )
SELECT DISTINCT VISIT_DETAIL_ID
    , CAST(VISIT_DETAIL_CLARITYHOSP_ALL.PERSON_ID AS INT) AS PERSON_ID
    , COALESCE(SOURCE_TO_CONCEPT_MAP_VISIT.TARGET_CONCEPT_ID, 0) AS VISIT_DETAIL_CONCEPT_ID
    , CAST(COALESCE(A_EFFECTIVE_TIME, CHECKIN_TIME, APPT_TIME, CONTACT_DATE) AS DATE) AS VISIT_DETAIL_START_DATE
    , COALESCE(A_EFFECTIVE_TIME, CHECKIN_TIME, APPT_TIME, CONTACT_DATE) AS VISIT_DETAIL_START_DATETIME
--    , CAST(VISIT_DETAIL_CLARITYHOSP_ALL.HOSP_DISCH_TIME AS DATE) AS VISIT_DETAIL_END_DATE
--    , VISIT_DETAIL_CLARITYHOSP_ALL.HOSP_DISCH_TIME AS VISIT_DETAIL_END_DATETIME
    
    , CASE 
        WHEN COALESCE(B_EFFECTIVE_TIME, HOSP_DISCH_TIME, CHECKOUT_TIME) IS NOT NULL 
            AND COALESCE(B_EFFECTIVE_TIME, HOSP_DISCH_TIME, CHECKOUT_TIME) 
            >= COALESCE(A_EFFECTIVE_TIME, CHECKIN_TIME, APPT_TIME, CONTACT_DATE)
        THEN CONVERT(DATE, COALESCE(B_EFFECTIVE_TIME, HOSP_DISCH_TIME, CHECKOUT_TIME))
        WHEN COALESCE(HOSP_DISCH_TIME, CHECKOUT_TIME) 
            >= COALESCE(A_EFFECTIVE_TIME, CHECKIN_TIME, APPT_TIME, CONTACT_DATE)
        THEN CONVERT(DATE, COALESCE(HOSP_DISCH_TIME, CHECKOUT_TIME)) 
        ELSE NULL
        END     AS VISIT_DETAIL_END_DATE
    ,CASE 
        WHEN COALESCE(B_EFFECTIVE_TIME, HOSP_DISCH_TIME, CHECKOUT_TIME) IS NOT NULL 
            AND COALESCE(B_EFFECTIVE_TIME, HOSP_DISCH_TIME, CHECKOUT_TIME) 
            >= COALESCE(A_EFFECTIVE_TIME, CHECKIN_TIME, APPT_TIME, CONTACT_DATE)
        THEN CONVERT(DATETIME, COALESCE(B_EFFECTIVE_TIME, HOSP_DISCH_TIME, CHECKOUT_TIME))
        WHEN COALESCE(HOSP_DISCH_TIME, CHECKOUT_TIME) 
            >= COALESCE(A_EFFECTIVE_TIME, CHECKIN_TIME, APPT_TIME, CONTACT_DATE)
        THEN CONVERT(DATETIME, COALESCE(HOSP_DISCH_TIME, CHECKOUT_TIME)) 
        ELSE NULL
        END     AS VISIT_DETAIL_END_DATETIME 
    , 44818518 AS VISIT_DETAIL_TYPE_CONCEPT_ID
    --    , NULL AS PROVIDER_ID
    , PROVIDER.PROVIDER_ID AS ATTENDING_PROV
    -- THESE DON'T WORK
    --    ,VISITING.PROVIDER_ID AS VISIT_PROV
    --    ,[ORDERING].PROVIDER_ID AS ORDER_PROV
    --    , VISIT_DETAIL_CLARITYHOSP_ALL.ATTENDING_PROV_ID
    --    , VISIT_DETAIL_CLARITYHOSP_ALL.REFERRING_PROV_ID
    --    , VISIT_DETAIL_CLARITYHOSP_ALL.ADM_DATE_TIME
    --    , VISIT_DETAIL_CLARITYHOSP_ALL.DISCH_DATE_TIME
    --    --    ,COALESCE(ATTENDING.PROVIDER_ID,REFFERING.PROVIDER_ID)  AS PROVIDER_ID
    --    , EFFECTIVE_DEPT_ID AS CARE_SITE_ID
    , CARE_SITE.CARE_SITE_ID AS CARE_SITE_ID
    --    , VISIT_DETAIL_SOURCE_VALUE
    , LEFT(VISIT_DETAIL_CLARITYHOSP_ALL.VISIT_DETAIL_SOURCE_VALUE, 50) AS VISIT_DETAIL_SOURCE_VALUE
    , 0 AS VISIT_DETAIL_SOURCE_CONCEPT_ID
    , LEFT(VISIT_DETAIL_CLARITYHOSP_ALL.ADMIT_SOURCE_NAME, 50) AS ADMITTING_SOURCE_VALUE
    , COALESCE(SOURCE_TO_CONCEPT_MAP_ADMIT.TARGET_CONCEPT_ID, 0) AS ADMITTING_SOURCE_CONCEPT_ID
    , LEFT(VISIT_DETAIL_CLARITYHOSP_ALL.DISCH_DISP_NAME, 50) as DISCHARGE_TO_SOURCE_VALUE
    , COALESCE(SOURCE_TO_CONCEPT_MAP_DISCHARGE.TARGET_CONCEPT_ID, 0) AS DISCHARGE_TO_CONCEPT_ID
    , CASE 
        WHEN RA = 1
            THEN NULL
        ELSE VISIT_DETAIL_ID - 1
        END AS PRECEDING_VISIT_DETAIL_ID -- A FOREIGN KEY TO THE VISIT_DETAIL TABLE OF THE VISIT IMMEDIATELY PRECEDING THIS VISIT
    , CASE 
        WHEN RA = 1
            THEN VISIT_DETAIL_ID
        ELSE VISIT_DETAIL_ID - RA + 1
        END AS VISIT_DETAIL_PARENT_ID
    , VISIT_OCCURRENCE.VISIT_OCCURRENCE_ID AS VISIT_OCCURRENCE_ID
    , 'VISIT_DETAIL--CLARITYHOSP--ALL' AS ETL_MODULE
    , VISIT_DETAIL_CLARITYHOSP_ALL.VISIT_SOURCE_VALUE AS VISIT_SOURCE_VALUE
FROM OMOP_CLARITY.VISIT_DETAIL_CLARITYHOSP_ALL
LEFT JOIN OMOP.CARE_SITE
    ON VISIT_DETAIL_CLARITYHOSP_ALL.HOSPITAL_AREA_ID = CARE_SITE.CARE_SITE_ID
INNER JOIN OMOP.VISIT_OCCURRENCE
    ON VISIT_DETAIL_CLARITYHOSP_ALL.VISIT_SOURCE_VALUE = VISIT_OCCURRENCE.VISIT_SOURCE_VALUE
LEFT JOIN OMOP.PROVIDER
    ON VISIT_DETAIL_CLARITYHOSP_ALL.ATTENDING_PROV_ID = PROVIDER.PROVIDER_SOURCE_VALUE
LEFT JOIN OMOP.SOURCE_TO_CONCEPT_MAP AS SOURCE_TO_CONCEPT_MAP_VISIT
    ON SOURCE_TO_CONCEPT_MAP_VISIT.SOURCE_CODE = VISIT_DETAIL_CLARITYHOSP_ALL.VISIT_DETAIL_SOURCE_CONCEPT
        AND SOURCE_TO_CONCEPT_MAP_VISIT.SOURCE_VOCABULARY_ID = 'SH_visit'
LEFT JOIN OMOP.SOURCE_TO_CONCEPT_MAP AS SOURCE_TO_CONCEPT_MAP_ADMIT
    ON SOURCE_TO_CONCEPT_MAP_ADMIT.SOURCE_CODE = VISIT_DETAIL_CLARITYHOSP_ALL.ADMIT_SOURCE_C
        AND SOURCE_TO_CONCEPT_MAP_ADMIT.SOURCE_VOCABULARY_ID = 'SH_admit'
LEFT JOIN OMOP.SOURCE_TO_CONCEPT_MAP AS SOURCE_TO_CONCEPT_MAP_DISCHARGE
    ON SOURCE_TO_CONCEPT_MAP_DISCHARGE.SOURCE_CODE = VISIT_DETAIL_CLARITYHOSP_ALL.DISCH_DISP_C
        AND SOURCE_TO_CONCEPT_MAP_DISCHARGE.SOURCE_VOCABULARY_ID = 'SH_discharge'
ORDER BY VISIT_DETAIL_ID;
